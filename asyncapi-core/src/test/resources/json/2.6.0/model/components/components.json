{
  "schemas": null,
  "servers": {
    "mqtt-test": {
      "url": "{username}.gigantic-server.com:{port}/{basePath}",
      "protocol": "secure-mqtt",
      "protocolVersion": "5",
      "description": "The production API server",
      "variables": {
        "username": {
          "default": "demo",
          "description": "This value is assigned by the service provider, in this example `gigantic-server.com`"
        },
        "port": {
          "enum": [
            "8883",
            "8884"
          ],
          "default": "8883"
        },
        "basePath": {
          "$ref": "#/components/serverVariables/basePath"
        }
      },
      "security": [
        {
          "mqttBroker": []
        }
      ],
      "tags": [
        {
          "name": "env:staging",
          "description": "This environment is a replica of the production environment"
        }
      ],
      "bindings": {
        "amqp": {
          "$ref": "#/components/serverBindings/amqp"
        },
        "amqp1": {},
        "anypointmq": {},
        "googlepubsub": {},
        "http": {},
        "ibmmq": {
          "groupId": "PRODCLSTR1",
          "ccdtQueueManagerName": "*",
          "multiEndpointServer": false,
          "heartBeatInterval": 300,
          "cipherSpec": "ANY_TLS12_OR_HIGHER",
          "bindingVersion": "0.1.0"
        },
        "jms": {},
        "kafka": {
          "schemaRegistryUrl": "https://my-schema-registry.com",
          "schemaRegistryVendor": "confluent",
          "bindingVersion": "0.4.0"
        },
        "mercure": {},
        "mqtt": {
          "clientId": "guest",
          "cleanSession": true,
          "lastWill": {
            "topic": "/last-wills",
            "qos": 2,
            "message": "Guest gone offline.",
            "retain": false
          },
          "keepAlive": 60,
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {
          "sessionExpiryInterval": 60,
          "bindingVersion": "0.2.0"
        },
        "nats": {},
        "pulsar": {
          "tenant": "contoso",
          "bindingVersion": "0.1.0"
        },
        "redis": {},
        "sns": {},
        "solace": {
          "msgVpn": "solace.private.net",
          "bindingVersion": "0.3.0"
        },
        "sqs": {},
        "stomp": {},
        "ws": {}
      }
    },
    "mqtt-stage": {
      "$ref": "#/components/servers/mqtt-stage"
    }
  },
  "serverVariables": {
    "port": {
      "enum": [
        "8883",
        "8884"
      ],
      "default": "8883",
      "description": "To which port connect",
      "examples": [
        "8883",
        "8884"
      ]
    },
    "basePath": {
      "$ref": "#/components/serverVariables/basePath"
    }
  },
  "channels": {
    "sign-up": {
      "description": "This channel is used to exchange messages about users signing up",
      "servers": [
        "stage.sign"
      ],
      "subscribe": {
        "operationId": "sendMessage",
        "summary": "Send message",
        "description": "Send message to remote server",
        "security": [
          {
            "api_key": [
              "write:messages"
            ]
          }
        ],
        "tags": [
          {
            "name": "messages",
            "description": "operations with messages",
            "externalDocs": {
              "description": "Messages validation rules",
              "url": "messages/validation-rules"
            }
          }
        ],
        "externalDocs": {
          "description": "Messages sending rules",
          "url": "messages/sending-rules"
        },
        "bindings": {
          "amqp": {
            "expiration": 100000,
            "userId": "guest",
            "cc": [
              "user.logs"
            ],
            "priority": 10,
            "deliveryMode": 2,
            "mandatory": false,
            "bcc": [
              "external.audit"
            ],
            "replyTo": "user.signedup",
            "timestamp": true,
            "ack": false,
            "bindingVersion": "0.2.0"
          },
          "amqp1": {
            "$ref": "#/components/operationBindings/amqp1"
          },
          "anypointmq": {
            "$ref": "#/components/operationBindings/anypointmq"
          },
          "googlepubsub": {
            "$ref": "#/components/operationBindings/googlepubsub"
          },
          "http": {
            "type": "request",
            "method": "GET",
            "query": {
              "type": "object",
              "required": [
                "companyId"
              ],
              "properties": {
                "companyId": {
                  "type": "number",
                  "minimum": 1,
                  "description": "The Id of the company."
                },
                "additionalProperties": false
              }
            },
            "bindingVersion": "0.1.0"
          },
          "ibmmq": {
            "$ref": "#/components/operationBindings/ibmmq"
          },
          "jms": {
            "$ref": "#/components/operationBindings/jms"
          },
          "kafka": {
            "groupId": {
              "type": "string",
              "enum": [
                "myGroupId"
              ]
            },
            "clientId": {
              "type": "string",
              "enum": [
                "myClientId"
              ]
            },
            "bindingVersion": "0.4.0"
          },
          "mercure": {
            "$ref": "#/components/operationBindings/mercure"
          },
          "mqtt": {
            "qos": 2,
            "retain": true,
            "bindingVersion": "0.1.0"
          },
          "mqtt5": {
            "$ref": "#/components/operationBindings/mqtt5"
          },
          "nats": {
            "queue": "messages",
            "bindingVersion": "0.1.0"
          },
          "pulsar": {
            "$ref": "#/components/operationBindings/pulsar"
          },
          "redis": {
            "$ref": "#/components/operationBindings/redis"
          },
          "sns": {
            "$ref": "#/components/operationBindings/sns"
          },
          "solace": {
            "destinations": [
              {
                "destinationType": "queue",
                "queue": {
                  "name": "CreatedHREvents",
                  "topicSubscriptions": [
                    "person/*/created"
                  ],
                  "accessType": "exclusive",
                  "maxMsgSpoolSize": "1,500",
                  "maxTtl": "60"
                }
              },
              {
                "destinationType": "queue",
                "queue": {
                  "name": "UpdatedHREvents",
                  "topicSubscriptions": [
                    "person/*/updated"
                  ]
                },
                "topic": {
                  "topicSubscriptions": [
                    "person/*/updated"
                  ]
                }
              }
            ],
            "bindingVersion": "0.3.0"
          },
          "sqs": {
            "$ref": "#/components/operationBindings/sqs"
          },
          "stomp": {
            "$ref": "#/components/operationBindings/stomp"
          },
          "ws": {
            "$ref": "#/components/operationBindings/ws"
          }
        },
        "traits": [
          {
            "$ref": "#/components/operationTraits/sendMessage"
          },
          {
            "operationId": "sendMessage",
            "summary": "Send message",
            "description": "Send message to remote server",
            "security": [
              {
                "api_key": [
                  "write:messages"
                ]
              }
            ],
            "tags": [
              {
                "name": "messages",
                "description": "operations with messages",
                "externalDocs": {
                  "description": "Messages validation rules",
                  "url": "messages/validation-rules"
                }
              }
            ],
            "externalDocs": {
              "description": "Messages sending rules",
              "url": "messages/sending-rules"
            },
            "bindings": {
              "amqp": {
                "expiration": 100000,
                "userId": "guest",
                "cc": [
                  "user.logs"
                ],
                "priority": 10,
                "deliveryMode": 2,
                "mandatory": false,
                "bcc": [
                  "external.audit"
                ],
                "replyTo": "user.signedup",
                "timestamp": true,
                "ack": false,
                "bindingVersion": "0.2.0"
              },
              "amqp1": {
                "$ref": "#/components/operationBindings/amqp1"
              },
              "anypointmq": {
                "$ref": "#/components/operationBindings/anypointmq"
              },
              "googlepubsub": {
                "$ref": "#/components/operationBindings/googlepubsub"
              },
              "http": {
                "type": "request",
                "method": "GET",
                "query": {
                  "type": "object",
                  "required": [
                    "companyId"
                  ],
                  "properties": {
                    "companyId": {
                      "type": "number",
                      "minimum": 1,
                      "description": "The Id of the company."
                    },
                    "additionalProperties": false
                  }
                },
                "bindingVersion": "0.1.0"
              },
              "ibmmq": {
                "$ref": "#/components/operationBindings/ibmmq"
              },
              "jms": {
                "$ref": "#/components/operationBindings/jms"
              },
              "kafka": {
                "groupId": {
                  "type": "string",
                  "enum": [
                    "myGroupId"
                  ]
                },
                "clientId": {
                  "type": "string",
                  "enum": [
                    "myClientId"
                  ]
                },
                "bindingVersion": "0.4.0"
              },
              "mercure": {
                "$ref": "#/components/operationBindings/mercure"
              },
              "mqtt": {
                "qos": 2,
                "retain": true,
                "bindingVersion": "0.1.0"
              },
              "mqtt5": {
                "$ref": "#/components/operationBindings/mqtt5"
              },
              "nats": {
                "queue": "messages",
                "bindingVersion": "0.1.0"
              },
              "pulsar": {
                "$ref": "#/components/operationBindings/pulsar"
              },
              "redis": {
                "$ref": "#/components/operationBindings/redis"
              },
              "sns": {
                "$ref": "#/components/operationBindings/sns"
              },
              "solace": {
                "destinations": [
                  {
                    "destinationType": "queue",
                    "queue": {
                      "name": "CreatedHREvents",
                      "topicSubscriptions": [
                        "person/*/created"
                      ],
                      "accessType": "exclusive",
                      "maxMsgSpoolSize": "1,500",
                      "maxTtl": "60"
                    }
                  },
                  {
                    "destinationType": "queue",
                    "queue": {
                      "name": "UpdatedHREvents",
                      "topicSubscriptions": [
                        "person/*/updated"
                      ]
                    },
                    "topic": {
                      "topicSubscriptions": [
                        "person/*/updated"
                      ]
                    }
                  }
                ],
                "bindingVersion": "0.3.0"
              },
              "sqs": {
                "$ref": "#/components/operationBindings/sqs"
              },
              "stomp": {
                "$ref": "#/components/operationBindings/stomp"
              },
              "ws": {
                "$ref": "#/components/operationBindings/ws"
              }
            }
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/sendMessage"
            },
            {
              "messageId": "userSignup",
              "headers": {
                "type": "object",
                "properties": {
                  "correlationId": {
                    "description": "Correlation ID set by application",
                    "type": "string"
                  },
                  "applicationInstanceId": {
                    "description": "Unique identifier for a given instance of the publishing application",
                    "type": "string"
                  }
                }
              },
              "payload": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/userCreate"
                  },
                  "signup": {
                    "$ref": "#/components/schemas/signup"
                  }
                }
              },
              "correlationId": {
                "description": "Default Correlation ID",
                "location": "$message.header#/correlationId"
              },
              "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
              "contentType": "application/json",
              "name": "UserSignup",
              "title": "User signup",
              "summary": "Action to sign a user up.",
              "description": "A longer description",
              "tags": [
                { "name": "user" },
                { "name": "signup" },
                { "name": "register" }
              ],
              "externalDocs": {
                "description": "User sign up rules",
                "url": "messages/sign-up-rules"
              },
              "bindings": {
                "amqp": {
                  "contentEncoding": "gzip",
                  "messageType": "user.signup",
                  "bindingVersion": "0.2.0"
                },
                "amqp1": {
                  "$ref": "#/components/messageBindings/amqp1"
                },
                "anypointmq": {
                  "headers": {
                    "type": "object",
                    "properties": {
                      "correlationId": {
                        "description": "Correlation ID set by application",
                        "type": "string"
                      }
                    }
                  },
                  "bindingVersion": "0.0.1"
                },
                "googlepubsub": {
                  "schema": {
                    "name": "projects/your-project/schemas/message-avro",
                    "type": "avro"
                  },
                  "bindingVersion": "0.1.0"
                },
                "http": {
                  "headers": {
                    "type": "object",
                    "properties": {
                      "Content-Type": {
                        "type": "string",
                        "enum": [
                          "application/json"
                        ]
                      }
                    }
                  },
                  "bindingVersion": "0.1.0"
                },
                "ibmmq": {
                  "type": "jms",
                  "description": "JMS stream message",
                  "headers": "Content-Type: application/json",
                  "expiry": 0,
                  "bindingVersion": "0.1.0"
                },
                "jms": {
                  "$ref": "#/components/messageBindings/jms"
                },
                "kafka": {
                  "key": {
                    "type": "string",
                    "enum": [
                      "myKey"
                    ]
                  },
                  "schemaIdLocation": "payload",
                  "schemaIdPayloadEncoding": "apicurio-new",
                  "schemaLookupStrategy": "TopicIdStrategy",
                  "bindingVersion": "0.4.0"
                },
                "mercure": {
                  "$ref": "#/components/messageBindings/mercure"
                },
                "mqtt": {
                  "bindingVersion": "0.1.0"
                },
                "mqtt5": {
                  "$ref": "#/components/messageBindings/mqtt5"
                },
                "nats": {
                  "$ref": "#/components/messageBindings/nats"
                },
                "pulsar": {
                  "$ref": "#/components/messageBindings/pulsar"
                },
                "redis": {
                  "$ref": "#/components/messageBindings/redis"
                },
                "sns": {
                  "$ref": "#/components/messageBindings/sns"
                },
                "solace": {
                  "$ref": "#/components/messageBindings/solace"
                },
                "sqs": {
                  "$ref": "#/components/messageBindings/sqs"
                },
                "stomp": {
                  "$ref": "#/components/messageBindings/stomp"
                },
                "ws": {
                  "$ref": "#/components/messageBindings/ws"
                }
              },
              "examples": [
                {
                  "name": "SimpleSignup",
                  "summary": "A simple UserSignup example message",
                  "headers": {
                    "correlationId": "my-correlation-id",
                    "applicationInstanceId": "myInstanceId"
                  },
                  "payload": {
                    "user": {
                      "someUserKey": "someUserValue"
                    },
                    "signup": {
                      "someSignupKey": "someSignupValue"
                    }
                  }
                }
              ],
              "traits": [
                { "$ref": "#/components/messageTraits/commonHeaders" }
              ]
            }
          ]
        }
      },
      "publish": {
        "operationId": "sendMessage",
        "summary": "Send message",
        "description": "Send message to remote server",
        "security": [
          {
            "api_key": [
              "write:messages"
            ]
          }
        ],
        "tags": [
          {
            "name": "messages",
            "description": "operations with messages",
            "externalDocs": {
              "description": "Messages validation rules",
              "url": "messages/validation-rules"
            }
          }
        ],
        "externalDocs": {
          "description": "Messages sending rules",
          "url": "messages/sending-rules"
        },
        "bindings": {
          "amqp": {
            "expiration": 100000,
            "userId": "guest",
            "cc": [
              "user.logs"
            ],
            "priority": 10,
            "deliveryMode": 2,
            "mandatory": false,
            "bcc": [
              "external.audit"
            ],
            "replyTo": "user.signedup",
            "timestamp": true,
            "ack": false,
            "bindingVersion": "0.2.0"
          },
          "amqp1": {
            "$ref": "#/components/operationBindings/amqp1"
          },
          "anypointmq": {
            "$ref": "#/components/operationBindings/anypointmq"
          },
          "googlepubsub": {
            "$ref": "#/components/operationBindings/googlepubsub"
          },
          "http": {
            "type": "request",
            "method": "GET",
            "query": {
              "type": "object",
              "required": [
                "companyId"
              ],
              "properties": {
                "companyId": {
                  "type": "number",
                  "minimum": 1,
                  "description": "The Id of the company."
                },
                "additionalProperties": false
              }
            },
            "bindingVersion": "0.1.0"
          },
          "ibmmq": {
            "$ref": "#/components/operationBindings/ibmmq"
          },
          "jms": {
            "$ref": "#/components/operationBindings/jms"
          },
          "kafka": {
            "groupId": {
              "type": "string",
              "enum": [
                "myGroupId"
              ]
            },
            "clientId": {
              "type": "string",
              "enum": [
                "myClientId"
              ]
            },
            "bindingVersion": "0.4.0"
          },
          "mercure": {
            "$ref": "#/components/operationBindings/mercure"
          },
          "mqtt": {
            "qos": 2,
            "retain": true,
            "bindingVersion": "0.1.0"
          },
          "mqtt5": {
            "$ref": "#/components/operationBindings/mqtt5"
          },
          "nats": {
            "queue": "messages",
            "bindingVersion": "0.1.0"
          },
          "pulsar": {
            "$ref": "#/components/operationBindings/pulsar"
          },
          "redis": {
            "$ref": "#/components/operationBindings/redis"
          },
          "sns": {
            "$ref": "#/components/operationBindings/sns"
          },
          "solace": {
            "destinations": [
              {
                "destinationType": "queue",
                "queue": {
                  "name": "CreatedHREvents",
                  "topicSubscriptions": [
                    "person/*/created"
                  ],
                  "accessType": "exclusive",
                  "maxMsgSpoolSize": "1,500",
                  "maxTtl": "60"
                }
              },
              {
                "destinationType": "queue",
                "queue": {
                  "name": "UpdatedHREvents",
                  "topicSubscriptions": [
                    "person/*/updated"
                  ]
                },
                "topic": {
                  "topicSubscriptions": [
                    "person/*/updated"
                  ]
                }
              }
            ],
            "bindingVersion": "0.3.0"
          },
          "sqs": {
            "$ref": "#/components/operationBindings/sqs"
          },
          "stomp": {
            "$ref": "#/components/operationBindings/stomp"
          },
          "ws": {
            "$ref": "#/components/operationBindings/ws"
          }
        },
        "traits": [
          {
            "$ref": "#/components/operationTraits/sendMessage"
          },
          {
            "operationId": "sendMessage",
            "summary": "Send message",
            "description": "Send message to remote server",
            "security": [
              {
                "api_key": [
                  "write:messages"
                ]
              }
            ],
            "tags": [
              {
                "name": "messages",
                "description": "operations with messages",
                "externalDocs": {
                  "description": "Messages validation rules",
                  "url": "messages/validation-rules"
                }
              }
            ],
            "externalDocs": {
              "description": "Messages sending rules",
              "url": "messages/sending-rules"
            },
            "bindings": {
              "amqp": {
                "expiration": 100000,
                "userId": "guest",
                "cc": [
                  "user.logs"
                ],
                "priority": 10,
                "deliveryMode": 2,
                "mandatory": false,
                "bcc": [
                  "external.audit"
                ],
                "replyTo": "user.signedup",
                "timestamp": true,
                "ack": false,
                "bindingVersion": "0.2.0"
              },
              "amqp1": {
                "$ref": "#/components/operationBindings/amqp1"
              },
              "anypointmq": {
                "$ref": "#/components/operationBindings/anypointmq"
              },
              "googlepubsub": {
                "$ref": "#/components/operationBindings/googlepubsub"
              },
              "http": {
                "type": "request",
                "method": "GET",
                "query": {
                  "type": "object",
                  "required": [
                    "companyId"
                  ],
                  "properties": {
                    "companyId": {
                      "type": "number",
                      "minimum": 1,
                      "description": "The Id of the company."
                    },
                    "additionalProperties": false
                  }
                },
                "bindingVersion": "0.1.0"
              },
              "ibmmq": {
                "$ref": "#/components/operationBindings/ibmmq"
              },
              "jms": {
                "$ref": "#/components/operationBindings/jms"
              },
              "kafka": {
                "groupId": {
                  "type": "string",
                  "enum": [
                    "myGroupId"
                  ]
                },
                "clientId": {
                  "type": "string",
                  "enum": [
                    "myClientId"
                  ]
                },
                "bindingVersion": "0.4.0"
              },
              "mercure": {
                "$ref": "#/components/operationBindings/mercure"
              },
              "mqtt": {
                "qos": 2,
                "retain": true,
                "bindingVersion": "0.1.0"
              },
              "mqtt5": {
                "$ref": "#/components/operationBindings/mqtt5"
              },
              "nats": {
                "queue": "messages",
                "bindingVersion": "0.1.0"
              },
              "pulsar": {
                "$ref": "#/components/operationBindings/pulsar"
              },
              "redis": {
                "$ref": "#/components/operationBindings/redis"
              },
              "sns": {
                "$ref": "#/components/operationBindings/sns"
              },
              "solace": {
                "destinations": [
                  {
                    "destinationType": "queue",
                    "queue": {
                      "name": "CreatedHREvents",
                      "topicSubscriptions": [
                        "person/*/created"
                      ],
                      "accessType": "exclusive",
                      "maxMsgSpoolSize": "1,500",
                      "maxTtl": "60"
                    }
                  },
                  {
                    "destinationType": "queue",
                    "queue": {
                      "name": "UpdatedHREvents",
                      "topicSubscriptions": [
                        "person/*/updated"
                      ]
                    },
                    "topic": {
                      "topicSubscriptions": [
                        "person/*/updated"
                      ]
                    }
                  }
                ],
                "bindingVersion": "0.3.0"
              },
              "sqs": {
                "$ref": "#/components/operationBindings/sqs"
              },
              "stomp": {
                "$ref": "#/components/operationBindings/stomp"
              },
              "ws": {
                "$ref": "#/components/operationBindings/ws"
              }
            }
          }
        ],
        "message": {
          "messageId": "userSignup",
          "headers": {
            "type": "object",
            "properties": {
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              },
              "applicationInstanceId": {
                "description": "Unique identifier for a given instance of the publishing application",
                "type": "string"
              }
            }
          },
          "payload": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/userCreate"
              },
              "signup": {
                "$ref": "#/components/schemas/signup"
              }
            }
          },
          "correlationId": {
            "description": "Default Correlation ID",
            "location": "$message.header#/correlationId"
          },
          "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
          "contentType": "application/json",
          "name": "UserSignup",
          "title": "User signup",
          "summary": "Action to sign a user up.",
          "description": "A longer description",
          "tags": [
            { "name": "user" },
            { "name": "signup" },
            { "name": "register" }
          ],
          "externalDocs": {
            "description": "User sign up rules",
            "url": "messages/sign-up-rules"
          },
          "bindings": {
            "amqp": {
              "contentEncoding": "gzip",
              "messageType": "user.signup",
              "bindingVersion": "0.2.0"
            },
            "amqp1": {
              "$ref": "#/components/messageBindings/amqp1"
            },
            "anypointmq": {
              "headers": {
                "type": "object",
                "properties": {
                  "correlationId": {
                    "description": "Correlation ID set by application",
                    "type": "string"
                  }
                }
              },
              "bindingVersion": "0.0.1"
            },
            "googlepubsub": {
              "schema": {
                "name": "projects/your-project/schemas/message-avro",
                "type": "avro"
              },
              "bindingVersion": "0.1.0"
            },
            "http": {
              "headers": {
                "type": "object",
                "properties": {
                  "Content-Type": {
                    "type": "string",
                    "enum": [
                      "application/json"
                    ]
                  }
                }
              },
              "bindingVersion": "0.1.0"
            },
            "ibmmq": {
              "type": "jms",
              "description": "JMS stream message",
              "headers": "Content-Type: application/json",
              "expiry": 0,
              "bindingVersion": "0.1.0"
            },
            "jms": {
              "$ref": "#/components/messageBindings/jms"
            },
            "kafka": {
              "key": {
                "type": "string",
                "enum": [
                  "myKey"
                ]
              },
              "schemaIdLocation": "payload",
              "schemaIdPayloadEncoding": "apicurio-new",
              "schemaLookupStrategy": "TopicIdStrategy",
              "bindingVersion": "0.4.0"
            },
            "mercure": {
              "$ref": "#/components/messageBindings/mercure"
            },
            "mqtt": {
              "bindingVersion": "0.1.0"
            },
            "mqtt5": {
              "$ref": "#/components/messageBindings/mqtt5"
            },
            "nats": {
              "$ref": "#/components/messageBindings/nats"
            },
            "pulsar": {
              "$ref": "#/components/messageBindings/pulsar"
            },
            "redis": {
              "$ref": "#/components/messageBindings/redis"
            },
            "sns": {
              "$ref": "#/components/messageBindings/sns"
            },
            "solace": {
              "$ref": "#/components/messageBindings/solace"
            },
            "sqs": {
              "$ref": "#/components/messageBindings/sqs"
            },
            "stomp": {
              "$ref": "#/components/messageBindings/stomp"
            },
            "ws": {
              "$ref": "#/components/messageBindings/ws"
            }
          },
          "examples": [
            {
              "name": "SimpleSignup",
              "summary": "A simple UserSignup example message",
              "headers": {
                "correlationId": "my-correlation-id",
                "applicationInstanceId": "myInstanceId"
              },
              "payload": {
                "user": {
                  "someUserKey": "someUserValue"
                },
                "signup": {
                  "someSignupKey": "someSignupValue"
                }
              }
            }
          ],
          "traits": [
            { "$ref": "#/components/messageTraits/commonHeaders" }
          ]
        }
      },
      "parameters": {
        "userId": {
          "description": "Id of the user.",
          "schema": {
            "type": "string"
          },
          "location": "$message.payload#/user/id"
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "queue": {
            "name": "my-queue-name",
            "durable": true,
            "exclusive": true,
            "autoDelete": false,
            "vhost": "/"
          },
          "exchange": {
            "name": "myExchange",
            "type": "topic",
            "durable": true,
            "autoDelete": false,
            "vhost": "/"
          },
          "bindingVersion": "0.2.0"
        },
        "amqp1": {
          "$ref": "#/components/channelBindings/amqp1"
        },
        "anypointmq": {
          "destination": "user-signup-exchg",
          "destinationType": "exchange",
          "bindingVersion": "0.0.1"
        },
        "googlepubsub": {
          "topic": "projects/your-project/topics/topic-proto-schema",
          "messageRetentionDuration": "86400s",
          "messageStoragePolicy": {
            "allowedPersistenceRegions": [
              "us-central1",
              "us-central2",
              "us-east1",
              "us-east4",
              "us-east5",
              "us-east7",
              "us-south1",
              "us-west1",
              "us-west2",
              "us-west3",
              "us-west4"
            ]
          },
          "schemaSettings": {
            "encoding": "binary",
            "name": "projects/your-project/schemas/message-proto"
          },
          "bindingVersion": "0.1.0"
        },
        "http": {
          "$ref": "#/components/channelBindings/http"
        },
        "ibmmq": {
          "destinationType": "topic",
          "queue": {
            "objectName": "message",
            "isPartitioned": false,
            "exclusive": true
          },
          "topic": {
            "string": "messages",
            "objectName": "message",
            "durablePermitted": true,
            "lastMsgRetained": true
          },
          "maxMsgLength": 1024,
          "bindingVersion": "0.1.0"
        },
        "jms": {
          "$ref": "#/components/channelBindings/jms"
        },
        "kafka": {
          "topic": "my-specific-topic-name",
          "partitions": 20,
          "replicas": 3,
          "topicConfiguration": {
            "cleanup.policy": [
              "delete",
              "compact"
            ],
            "retention.ms": 604800000,
            "retention.bytes": 1000000000,
            "delete.retention.ms": 86400000,
            "max.message.bytes": 1048588
          },
          "bindingVersion": "0.4.0"
        },
        "mercure": {
          "$ref": "#/components/channelBindings/mercure"
        },
        "mqtt": {
          "$ref": "#/components/channelBindings/mqtt"
        },
        "mqtt5": {
          "$ref": "#/components/channelBindings/mqtt5"
        },
        "nats": {
          "$ref": "#/components/channelBindings/nats"
        },
        "pulsar": {
          "namespace": "staging",
          "persistence": "persistent",
          "compaction": 1000,
          "geo-replication": [
            "us-east1",
            "us-west1"
          ],
          "retention": {
            "time": 7,
            "size": 1000
          },
          "ttl": 360,
          "deduplication": false,
          "bindingVersion": "0.1.0"
        },
        "redis": {
          "$ref": "#/components/channelBindings/redis"
        },
        "sns": {
          "$ref": "#/components/channelBindings/sns"
        },
        "solace": {
          "$ref": "#/components/channelBindings/solace"
        },
        "sqs": {
          "$ref": "#/components/channelBindings/sqs"
        },
        "stomp": {
          "$ref": "#/components/channelBindings/stomp"
        },
        "ws": {
          "method": "GET",
          "query": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string",
                "description": "Referral."
              }
            }
          },
          "headers": {
            "type": "object",
            "properties": {
              "Authentication": {
                "type": "string",
                "description": "Authentication token"
              }
            }
          }
        }
      }
    }
  },
  "messages": {
    "userSignup": {
      "messageId": "userSignup",
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          },
          "applicationInstanceId": {
            "description": "Unique identifier for a given instance of the publishing application",
            "type": "string"
          }
        }
      },
      "payload": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/userCreate"
          },
          "signup": {
            "$ref": "#/components/schemas/signup"
          }
        }
      },
      "correlationId": {
        "description": "Default Correlation ID",
        "location": "$message.header#/correlationId"
      },
      "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
      "contentType": "application/json",
      "name": "UserSignup",
      "title": "User signup",
      "summary": "Action to sign a user up.",
      "description": "A longer description",
      "tags": [
        { "name": "user" },
        { "name": "signup" },
        { "name": "register" }
      ],
      "externalDocs": {
        "description": "User sign up rules",
        "url": "messages/sign-up-rules"
      },
      "bindings": {
        "amqp": {
          "contentEncoding": "gzip",
          "messageType": "user.signup",
          "bindingVersion": "0.2.0"
        },
        "amqp1": {
          "$ref": "#/components/messageBindings/amqp1"
        },
        "anypointmq": {
          "headers": {
            "type": "object",
            "properties": {
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              }
            }
          },
          "bindingVersion": "0.0.1"
        },
        "googlepubsub": {
          "schema": {
            "name": "projects/your-project/schemas/message-avro",
            "type": "avro"
          },
          "bindingVersion": "0.1.0"
        },
        "http": {
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [
                  "application/json"
                ]
              }
            }
          },
          "bindingVersion": "0.1.0"
        },
        "ibmmq": {
          "type": "jms",
          "description": "JMS stream message",
          "headers": "Content-Type: application/json",
          "expiry": 0,
          "bindingVersion": "0.1.0"
        },
        "jms": {
          "$ref": "#/components/messageBindings/jms"
        },
        "kafka": {
          "key": {
            "type": "string",
            "enum": [
              "myKey"
            ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy",
          "bindingVersion": "0.4.0"
        },
        "mercure": {
          "$ref": "#/components/messageBindings/mercure"
        },
        "mqtt": {
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {
          "$ref": "#/components/messageBindings/mqtt5"
        },
        "nats": {
          "$ref": "#/components/messageBindings/nats"
        },
        "pulsar": {
          "$ref": "#/components/messageBindings/pulsar"
        },
        "redis": {
          "$ref": "#/components/messageBindings/redis"
        },
        "sns": {
          "$ref": "#/components/messageBindings/sns"
        },
        "solace": {
          "$ref": "#/components/messageBindings/solace"
        },
        "sqs": {
          "$ref": "#/components/messageBindings/sqs"
        },
        "stomp": {
          "$ref": "#/components/messageBindings/stomp"
        },
        "ws": {
          "$ref": "#/components/messageBindings/ws"
        }
      },
      "examples": [
        {
          "name": "SimpleSignup",
          "summary": "A simple UserSignup example message",
          "headers": {
            "correlationId": "my-correlation-id",
            "applicationInstanceId": "myInstanceId"
          },
          "payload": {
            "user": {
              "someUserKey": "someUserValue"
            },
            "signup": {
              "someSignupKey": "someSignupValue"
            }
          }
        }
      ],
      "traits": [
        { "$ref": "#/components/messageTraits/commonHeaders" }
      ]
    },
    "userSignout": {
      "$ref": "#/components/messages/userSignout"
    }
  },
  "securitySchemes": {
    "apiKey": {
      "type": "apiKey",
      "description": "apiKey",
      "in": "user"
    },
    "asymmetricEncryption": {
      "$ref": "#/components/securitySchemes/asymmetricEncryption"
    },
    "gssapi": {
      "$ref": "#/components/securitySchemes/gssapi"
    },
    "oauth2": {
      "type": "oauth2",
      "description": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://example.com/api/oauth/dialog",
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "clientCredentials": {
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "implicit": {
          "authorizationUrl": "https://example.com/api/oauth/dialog",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "password": {
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        }
      }
    },
    "openIdConnect": {
      "type": "openIdConnect",
      "description": "openIdConnect",
      "openIdConnectUrl": "https://server.com/.well-known/openid-configuration"
    },
    "httpApiKey": {
      "type": "httpApiKey",
      "description": "httpApiKey",
      "name": "api_key",
      "in": "header"
    },
    "httpBasic": {
      "type": "http",
      "description": "http",
      "scheme": "basic"
    },
    "httpBearer": {
      "type": "http",
      "description": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    },
    "plain": {
      "$ref": "#/components/securitySchemes/plain"
    },
    "scramSha256": {
      "$ref": "#/components/securitySchemes/scramSha256"
    },
    "scramSha512": {
      "$ref": "#/components/securitySchemes/scramSha512"
    },
    "symmetricEncryption": {
      "$ref": "#/components/securitySchemes/symmetricEncryption"
    },
    "userPassword": {
      "$ref": "#/components/securitySchemes/userPassword"
    },
    "X509": {
      "$ref": "#/components/securitySchemes/X509"
    }
  },
  "parameters": {
    "parameterWithSchema": {
      "description": "Id of the user.",
      "schema": {
        "type": "string"
      },
      "location": "$message.payload#/user/id"
    },
    "parameterWithSchemaReference": {
      "description": "Id of the user.",
      "schema": {
        "$ref": "#/components/schemas/userId"
      },
      "location": "$message.payload#/user/id"
    },
    "parameter": {
      "$ref": "#/components/parameters/parameter"
    }
  },
  "correlationIds": {
    "userSignupCorrelationId": {
      "description": "Default Correlation ID",
      "location": "$message.header#/correlationId"
    },
    "correlationId": {
      "$ref": "#/correlationIds/parameters/correlationId"
    }
  },
  "operationTraits": {
    "sendMessage": {
      "operationId": "sendMessage",
      "summary": "Send message",
      "description": "Send message to remote server",
      "security": [
        {
          "api_key": [
            "write:messages"
          ]
        }
      ],
      "tags": [
        {
          "name": "messages",
          "description": "operations with messages",
          "externalDocs": {
            "description": "Messages validation rules",
            "url": "messages/validation-rules"
          }
        }
      ],
      "externalDocs": {
        "description": "Messages sending rules",
        "url": "messages/sending-rules"
      },
      "bindings": {
        "amqp": {
          "expiration": 100000,
          "userId": "guest",
          "cc": [
            "user.logs"
          ],
          "priority": 10,
          "deliveryMode": 2,
          "mandatory": false,
          "bcc": [
            "external.audit"
          ],
          "replyTo": "user.signedup",
          "timestamp": true,
          "ack": false,
          "bindingVersion": "0.2.0"
        },
        "amqp1": {
          "$ref": "#/components/operationBindings/amqp1"
        },
        "anypointmq": {
          "$ref": "#/components/operationBindings/anypointmq"
        },
        "googlepubsub": {
          "$ref": "#/components/operationBindings/googlepubsub"
        },
        "http": {
          "type": "request",
          "method": "GET",
          "query": {
            "type": "object",
            "required": [
              "companyId"
            ],
            "properties": {
              "companyId": {
                "type": "number",
                "minimum": 1,
                "description": "The Id of the company."
              },
              "additionalProperties": false
            }
          },
          "bindingVersion": "0.1.0"
        },
        "ibmmq": {
          "$ref": "#/components/operationBindings/ibmmq"
        },
        "jms": {
          "$ref": "#/components/operationBindings/jms"
        },
        "kafka": {
          "groupId": {
            "type": "string",
            "enum": [
              "myGroupId"
            ]
          },
          "clientId": {
            "type": "string",
            "enum": [
              "myClientId"
            ]
          },
          "bindingVersion": "0.4.0"
        },
        "mercure": {
          "$ref": "#/components/operationBindings/mercure"
        },
        "mqtt": {
          "qos": 2,
          "retain": true,
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {
          "$ref": "#/components/operationBindings/mqtt5"
        },
        "nats": {
          "queue": "messages",
          "bindingVersion": "0.1.0"
        },
        "pulsar": {
          "$ref": "#/components/operationBindings/pulsar"
        },
        "redis": {
          "$ref": "#/components/operationBindings/redis"
        },
        "sns": {
          "$ref": "#/components/operationBindings/sns"
        },
        "solace": {
          "destinations": [
            {
              "destinationType": "queue",
              "queue": {
                "name": "CreatedHREvents",
                "topicSubscriptions": [
                  "person/*/created"
                ],
                "accessType": "exclusive",
                "maxMsgSpoolSize": "1,500",
                "maxTtl": "60"
              }
            },
            {
              "destinationType": "queue",
              "queue": {
                "name": "UpdatedHREvents",
                "topicSubscriptions": [
                  "person/*/updated"
                ]
              },
              "topic": {
                "topicSubscriptions": [
                  "person/*/updated"
                ]
              }
            }
          ],
          "bindingVersion": "0.3.0"
        },
        "sqs": {
          "$ref": "#/components/operationBindings/sqs"
        },
        "stomp": {
          "$ref": "#/components/operationBindings/stomp"
        },
        "ws": {
          "$ref": "#/components/operationBindings/ws"
        }
      }
    },
    "deleteMessage": {
      "$ref": "#/components/operationTraits/deleteMessage"
    }
  },
  "messageTraits": {
    "userSignup": {
      "messageId": "userSignup",
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          },
          "applicationInstanceId": {
            "description": "Unique identifier for a given instance of the publishing application",
            "type": "string"
          }
        }
      },
      "correlationId": {
        "description": "Default Correlation ID",
        "location": "$message.header#/correlationId"
      },
      "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
      "contentType": "application/json",
      "name": "UserSignup",
      "title": "User signup",
      "summary": "Action to sign a user up.",
      "description": "A longer description",
      "tags": [
        { "name": "user" },
        { "name": "signup" },
        { "name": "register" }
      ],
      "externalDocs": {
        "description": "User sign up rules",
        "url": "messages/sign-up-rules"
      },
      "bindings": {
        "amqp": {
          "contentEncoding": "gzip",
          "messageType": "user.signup",
          "bindingVersion": "0.2.0"
        },
        "amqp1": {
          "$ref": "#/components/messageBindings/amqp1"
        },
        "anypointmq": {
          "headers": {
            "type": "object",
            "properties": {
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              }
            }
          },
          "bindingVersion": "0.0.1"
        },
        "googlepubsub": {
          "schema": {
            "name": "projects/your-project/schemas/message-avro",
            "type": "avro"
          },
          "bindingVersion": "0.1.0"
        },
        "http": {
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [
                  "application/json"
                ]
              }
            }
          },
          "bindingVersion": "0.1.0"
        },
        "ibmmq": {
          "type": "jms",
          "description": "JMS stream message",
          "headers": "Content-Type: application/json",
          "expiry": 0,
          "bindingVersion": "0.1.0"
        },
        "jms": {
          "$ref": "#/components/messageBindings/jms"
        },
        "kafka": {
          "key": {
            "type": "string",
            "enum": [
              "myKey"
            ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy",
          "bindingVersion": "0.4.0"
        },
        "mercure": {
          "$ref": "#/components/messageBindings/mercure"
        },
        "mqtt": {
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {
          "$ref": "#/components/messageBindings/mqtt5"
        },
        "nats": {
          "$ref": "#/components/messageBindings/nats"
        },
        "pulsar": {
          "$ref": "#/components/messageBindings/pulsar"
        },
        "redis": {
          "$ref": "#/components/messageBindings/redis"
        },
        "sns": {
          "$ref": "#/components/messageBindings/sns"
        },
        "solace": {
          "$ref": "#/components/messageBindings/solace"
        },
        "sqs": {
          "$ref": "#/components/messageBindings/sqs"
        },
        "stomp": {
          "$ref": "#/components/messageBindings/stomp"
        },
        "ws": {
          "$ref": "#/components/messageBindings/ws"
        }
      },
      "examples": [
        {
          "name": "SimpleSignup",
          "summary": "A simple UserSignup example message",
          "headers": {
            "correlationId": "my-correlation-id",
            "applicationInstanceId": "myInstanceId"
          },
          "payload": {
            "user": {
              "someUserKey": "someUserValue"
            },
            "signup": {
              "someSignupKey": "someSignupValue"
            }
          }
        }
      ]
    },
    "userSignout": {
      "$ref": "#/components/messageTraits/userSignout"
    }
  },
  "serverBindings": {
    "amqp": {
      "$ref": "#/components/serverBindings/amqp"
    },
    "amqp1": {},
    "anypointmq": {},
    "googlepubsub": {},
    "http": {},
    "ibmmq": {
      "groupId": "PRODCLSTR1",
      "ccdtQueueManagerName": "*",
      "multiEndpointServer": false,
      "heartBeatInterval": 300,
      "cipherSpec": "ANY_TLS12_OR_HIGHER",
      "bindingVersion": "0.1.0"
    },
    "jms": {},
    "kafka": {
      "schemaRegistryUrl": "https://my-schema-registry.com",
      "schemaRegistryVendor": "confluent",
      "bindingVersion": "0.4.0"
    },
    "mercure": {},
    "mqtt": {
      "clientId": "guest",
      "cleanSession": true,
      "lastWill": {
        "topic": "/last-wills",
        "qos": 2,
        "message": "Guest gone offline.",
        "retain": false
      },
      "keepAlive": 60,
      "bindingVersion": "0.1.0"
    },
    "mqtt5": {
      "sessionExpiryInterval": 60,
      "bindingVersion": "0.2.0"
    },
    "nats": {},
    "pulsar": {
      "tenant": "contoso",
      "bindingVersion": "0.1.0"
    },
    "redis": {},
    "sns": {},
    "solace": {
      "msgVpn": "solace.private.net",
      "bindingVersion": "0.3.0"
    },
    "sqs": {},
    "stomp": {},
    "ws": {}
  },
  "channelBindings": {
    "amqp": {
      "is": "routingKey",
      "queue": {
        "name": "my-queue-name",
        "durable": true,
        "exclusive": true,
        "autoDelete": false,
        "vhost": "/"
      },
      "exchange": {
        "name": "myExchange",
        "type": "topic",
        "durable": true,
        "autoDelete": false,
        "vhost": "/"
      },
      "bindingVersion": "0.2.0"
    },
    "amqp1": {
      "$ref": "#/components/channelBindings/amqp1"
    },
    "anypointmq": {
      "destination": "user-signup-exchg",
      "destinationType": "exchange",
      "bindingVersion": "0.0.1"
    },
    "googlepubsub": {
      "topic": "projects/your-project/topics/topic-proto-schema",
      "messageRetentionDuration": "86400s",
      "messageStoragePolicy": {
        "allowedPersistenceRegions": [
          "us-central1",
          "us-central2",
          "us-east1",
          "us-east4",
          "us-east5",
          "us-east7",
          "us-south1",
          "us-west1",
          "us-west2",
          "us-west3",
          "us-west4"
        ]
      },
      "schemaSettings": {
        "encoding": "binary",
        "name": "projects/your-project/schemas/message-proto"
      },
      "bindingVersion": "0.1.0"
    },
    "http": {
      "$ref": "#/components/channelBindings/http"
    },
    "ibmmq": {
      "destinationType": "topic",
      "queue": {
        "objectName": "message",
        "isPartitioned": false,
        "exclusive": true
      },
      "topic": {
        "string": "messages",
        "objectName": "message",
        "durablePermitted": true,
        "lastMsgRetained": true
      },
      "maxMsgLength": 1024,
      "bindingVersion": "0.1.0"
    },
    "jms": {
      "$ref": "#/components/channelBindings/jms"
    },
    "kafka": {
      "topic": "my-specific-topic-name",
      "partitions": 20,
      "replicas": 3,
      "topicConfiguration": {
        "cleanup.policy": [
          "delete",
          "compact"
        ],
        "retention.ms": 604800000,
        "retention.bytes": 1000000000,
        "delete.retention.ms": 86400000,
        "max.message.bytes": 1048588
      },
      "bindingVersion": "0.4.0"
    },
    "mercure": {
      "$ref": "#/components/channelBindings/mercure"
    },
    "mqtt": {
      "$ref": "#/components/channelBindings/mqtt"
    },
    "mqtt5": {
      "$ref": "#/components/channelBindings/mqtt5"
    },
    "nats": {
      "$ref": "#/components/channelBindings/nats"
    },
    "pulsar": {
      "namespace": "staging",
      "persistence": "persistent",
      "compaction": 1000,
      "geo-replication": [
        "us-east1",
        "us-west1"
      ],
      "retention": {
        "time": 7,
        "size": 1000
      },
      "ttl": 360,
      "deduplication": false,
      "bindingVersion": "0.1.0"
    },
    "redis": {
      "$ref": "#/components/channelBindings/redis"
    },
    "sns": {
      "$ref": "#/components/channelBindings/sns"
    },
    "solace": {
      "$ref": "#/components/channelBindings/solace"
    },
    "sqs": {
      "$ref": "#/components/channelBindings/sqs"
    },
    "stomp": {
      "$ref": "#/components/channelBindings/stomp"
    },
    "ws": {
      "method": "GET",
      "query": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "description": "Referral."
          }
        }
      },
      "headers": {
        "type": "object",
        "properties": {
          "Authentication": {
            "type": "string",
            "description": "Authentication token"
          }
        }
      }
    }
  },
  "operationBindings": {
    "amqp": {
      "expiration": 100000,
      "userId": "guest",
      "cc": [
        "user.logs"
      ],
      "priority": 10,
      "deliveryMode": 2,
      "mandatory": false,
      "bcc": [
        "external.audit"
      ],
      "replyTo": "user.signedup",
      "timestamp": true,
      "ack": false,
      "bindingVersion": "0.2.0"
    },
    "amqp1": {
      "$ref": "#/components/operationBindings/amqp1"
    },
    "anypointmq": {
      "$ref": "#/components/operationBindings/anypointmq"
    },
    "googlepubsub": {
      "$ref": "#/components/operationBindings/googlepubsub"
    },
    "http": {
      "type": "request",
      "method": "GET",
      "query": {
        "type": "object",
        "required": [
          "companyId"
        ],
        "properties": {
          "companyId": {
            "type": "number",
            "minimum": 1,
            "description": "The Id of the company."
          },
          "additionalProperties": false
        }
      },
      "bindingVersion": "0.1.0"
    },
    "ibmmq": {
      "$ref": "#/components/operationBindings/ibmmq"
    },
    "jms": {
      "$ref": "#/components/operationBindings/jms"
    },
    "kafka": {
      "groupId": {
        "type": "string",
        "enum": [
          "myGroupId"
        ]
      },
      "clientId": {
        "type": "string",
        "enum": [
          "myClientId"
        ]
      },
      "bindingVersion": "0.4.0"
    },
    "mercure": {
      "$ref": "#/components/operationBindings/mercure"
    },
    "mqtt": {
      "qos": 2,
      "retain": true,
      "bindingVersion": "0.1.0"
    },
    "mqtt5": {
      "$ref": "#/components/operationBindings/mqtt5"
    },
    "nats": {
      "queue": "messages",
      "bindingVersion": "0.1.0"
    },
    "pulsar": {
      "$ref": "#/components/operationBindings/pulsar"
    },
    "redis": {
      "$ref": "#/components/operationBindings/redis"
    },
    "sns": {
      "$ref": "#/components/operationBindings/sns"
    },
    "solace": {
      "destinations": [
        {
          "destinationType": "queue",
          "queue": {
            "name": "CreatedHREvents",
            "topicSubscriptions": [
              "person/*/created"
            ],
            "accessType": "exclusive",
            "maxMsgSpoolSize": "1,500",
            "maxTtl": "60"
          }
        },
        {
          "destinationType": "queue",
          "queue": {
            "name": "UpdatedHREvents",
            "topicSubscriptions": [
              "person/*/updated"
            ]
          },
          "topic": {
            "topicSubscriptions": [
              "person/*/updated"
            ]
          }
        }
      ],
      "bindingVersion": "0.3.0"
    },
    "sqs": {
      "$ref": "#/components/operationBindings/sqs"
    },
    "stomp": {
      "$ref": "#/components/operationBindings/stomp"
    },
    "ws": {
      "$ref": "#/components/operationBindings/ws"
    }
  },
  "messageBindings": {
    "amqp": {
      "contentEncoding": "gzip",
      "messageType": "user.signup",
      "bindingVersion": "0.2.0"
    },
    "amqp1": {
      "$ref": "#/components/messageBindings/amqp1"
    },
    "anypointmq": {
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          }
        }
      },
      "bindingVersion": "0.0.1"
    },
    "googlepubsub": {
      "schema": {
        "name": "projects/your-project/schemas/message-avro",
        "type": "avro"
      },
      "bindingVersion": "0.1.0"
    },
    "http": {
      "headers": {
        "type": "object",
        "properties": {
          "Content-Type": {
            "type": "string",
            "enum": [
              "application/json"
            ]
          }
        }
      },
      "bindingVersion": "0.1.0"
    },
    "ibmmq": {
      "type": "jms",
      "description": "JMS stream message",
      "headers": "Content-Type: application/json",
      "expiry": 0,
      "bindingVersion": "0.1.0"
    },
    "jms": {
      "$ref": "#/components/messageBindings/jms"
    },
    "kafka": {
      "key": {
        "type": "string",
        "enum": [
          "myKey"
        ]
      },
      "schemaIdLocation": "payload",
      "schemaIdPayloadEncoding": "apicurio-new",
      "schemaLookupStrategy": "TopicIdStrategy",
      "bindingVersion": "0.4.0"
    },
    "mercure": {
      "$ref": "#/components/messageBindings/mercure"
    },
    "mqtt": {
      "bindingVersion": "0.1.0"
    },
    "mqtt5": {
      "$ref": "#/components/messageBindings/mqtt5"
    },
    "nats": {
      "$ref": "#/components/messageBindings/nats"
    },
    "pulsar": {
      "$ref": "#/components/messageBindings/pulsar"
    },
    "redis": {
      "$ref": "#/components/messageBindings/redis"
    },
    "sns": {
      "$ref": "#/components/messageBindings/sns"
    },
    "solace": {
      "$ref": "#/components/messageBindings/solace"
    },
    "sqs": {
      "$ref": "#/components/messageBindings/sqs"
    },
    "stomp": {
      "$ref": "#/components/messageBindings/stomp"
    },
    "ws": {
      "$ref": "#/components/messageBindings/ws"
    }
  }
}
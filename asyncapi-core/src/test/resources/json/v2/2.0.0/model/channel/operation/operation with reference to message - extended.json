{
  "operationId" : "sendMessage",
  "summary" : "Send message",
  "description" : "Send message to remote server",
  "tags" : [ {
    "name" : "messages",
    "description" : "operations with messages",
    "externalDocs" : {
      "description" : "Messages validation rules",
      "url" : "messages/validation-rules"
    }
  } ],
  "externalDocs" : {
    "description" : "Messages sending rules",
    "url" : "messages/sending-rules"
  },
  "bindings" : {
    "amqp" : {
      "bindingVersion" : "0.2.0",
      "expiration" : 100000,
      "userId" : "guest",
      "cc" : [ "user.logs" ],
      "priority" : 10,
      "deliveryMode" : 2,
      "mandatory" : false,
      "bcc" : [ "external.audit" ],
      "replyTo" : "user.signedup",
      "timestamp" : true,
      "ack" : false
    },
    "amqp1" : {
      "bindingVersion" : "0.1.0"
    },
    "anypointmq" : {
      "bindingVersion" : "0.0.1"
    },
    "googlepubsub" : {
      "bindingVersion" : "0.2.0"
    },
    "http" : {
      "bindingVersion" : "0.3.0",
      "method" : "GET",
      "query" : {
        "type" : "object",
        "required" : [ "companyId" ],
        "properties" : {
          "companyId" : {
            "type" : "number",
            "minimum" : 1,
            "description" : "The Id of the company."
          }
        },
        "additionalProperties" : false
      }
    },
    "ibmmq" : {
      "bindingVersion" : "0.1.0"
    },
    "jms" : {
      "bindingVersion" : "0.0.1"
    },
    "kafka" : {
      "bindingVersion" : "0.4.0",
      "groupId" : {
        "type" : "string",
        "enum" : [ "myGroupId" ]
      },
      "clientId" : {
        "type" : "string",
        "enum" : [ "myClientId" ]
      }
    },
    "mercure" : {
      "bindingVersion" : "0.1.0"
    },
    "mqtt" : {
      "bindingVersion" : "0.1.0",
      "qos" : 2,
      "retain" : true
    },
    "mqtt5" : {
      "bindingVersion" : "0.2.0"
    },
    "nats" : {
      "bindingVersion" : "0.1.0",
      "queue" : "messages"
    },
    "pulsar" : {
      "bindingVersion" : "0.1.0"
    },
    "redis" : {
      "bindingVersion" : "0.1.0"
    },
    "sns" : {
      "bindingVersion" : "0.1.0"
    },
    "solace" : {
      "dmqEligible" : false,
      "bindingVersion" : "0.4.0",
      "destinations" : [ {
        "destinationType" : "queue",
        "deliveryMode" : "persistent",
        "queue" : {
          "name" : "sampleQueue",
          "topicSubscriptions" : [ "samples/*" ],
          "accessType" : "nonexclusive"
        }
      }, {
        "destinationType" : "topic",
        "deliveryMode" : "persistent",
        "topicSubscriptions" : [ "samples/*" ]
      } ]
    },
    "sqs" : {
      "queues" : [ {
        "name" : "myQueue",
        "fifoQueue" : true,
        "deduplicationScope" : "messageGroup",
        "fifoThroughputLimit" : "perMessageGroupId",
        "deliveryDelay" : 10,
        "visibilityTimeout" : 30,
        "receiveMessageWaitTime" : 0,
        "messageRetentionPeriod" : 345600,
        "redrivePolicy" : {
          "deadLetterQueue" : {
            "name" : "myQueue_error"
          },
          "maxReceiveCount" : 15
        },
        "policy" : {
          "statements" : [ {
            "effect" : "Deny",
            "principal" : "arn:aws:iam::123456789012:user/dec.kolakowski",
            "action" : [ "sqs:SendMessage", "sqs:ReceiveMessage" ]
          } ]
        }
      }, {
        "name" : "myQueue_error",
        "fifoQueue" : false,
        "deduplicationScope" : "queue",
        "fifoThroughputLimit" : "perQueue",
        "deliveryDelay" : 10,
        "visibilityTimeout" : 30,
        "receiveMessageWaitTime" : 0,
        "messageRetentionPeriod" : 345600
      } ],
      "bindingVersion" : "0.2.0"
    },
    "stomp" : {
      "bindingVersion" : "0.1.0"
    },
    "ws" : {
      "bindingVersion" : "0.1.0"
    }
  },
  "traits" : [ {
    "$ref" : "#/components/operationTraits/sendMessage"
  }, {
    "operationId" : "sendMessage",
    "summary" : "Send message",
    "description" : "Send message to remote server",
    "tags" : [ {
      "name" : "messages",
      "description" : "operations with messages",
      "externalDocs" : {
        "description" : "Messages validation rules",
        "url" : "messages/validation-rules"
      }
    } ],
    "externalDocs" : {
      "description" : "Messages sending rules",
      "url" : "messages/sending-rules"
    },
    "bindings" : {
      "amqp" : {
        "bindingVersion" : "0.2.0",
        "expiration" : 100000,
        "userId" : "guest",
        "cc" : [ "user.logs" ],
        "priority" : 10,
        "deliveryMode" : 2,
        "mandatory" : false,
        "bcc" : [ "external.audit" ],
        "replyTo" : "user.signedup",
        "timestamp" : true,
        "ack" : false
      },
      "amqp1" : {
        "bindingVersion" : "0.1.0"
      },
      "anypointmq" : {
        "bindingVersion" : "0.0.1"
      },
      "googlepubsub" : {
        "bindingVersion" : "0.2.0"
      },
      "http" : {
        "bindingVersion" : "0.3.0",
        "method" : "GET",
        "query" : {
          "type" : "object",
          "required" : [ "companyId" ],
          "properties" : {
            "companyId" : {
              "type" : "number",
              "minimum" : 1,
              "description" : "The Id of the company."
            }
          },
          "additionalProperties" : false
        }
      },
      "ibmmq" : {
        "bindingVersion" : "0.1.0"
      },
      "jms" : {
        "bindingVersion" : "0.0.1"
      },
      "kafka" : {
        "bindingVersion" : "0.4.0",
        "groupId" : {
          "type" : "string",
          "enum" : [ "myGroupId" ]
        },
        "clientId" : {
          "type" : "string",
          "enum" : [ "myClientId" ]
        }
      },
      "mercure" : {
        "bindingVersion" : "0.1.0"
      },
      "mqtt" : {
        "bindingVersion" : "0.1.0",
        "qos" : 2,
        "retain" : true
      },
      "mqtt5" : {
        "bindingVersion" : "0.2.0"
      },
      "nats" : {
        "bindingVersion" : "0.1.0",
        "queue" : "messages"
      },
      "pulsar" : {
        "bindingVersion" : "0.1.0"
      },
      "redis" : {
        "bindingVersion" : "0.1.0"
      },
      "sns" : {
        "bindingVersion" : "0.1.0"
      },
      "solace" : {
        "dmqEligible" : false,
        "bindingVersion" : "0.4.0",
        "destinations" : [ {
          "destinationType" : "queue",
          "deliveryMode" : "persistent",
          "queue" : {
            "name" : "sampleQueue",
            "topicSubscriptions" : [ "samples/*" ],
            "accessType" : "nonexclusive"
          }
        }, {
          "destinationType" : "topic",
          "deliveryMode" : "persistent",
          "topicSubscriptions" : [ "samples/*" ]
        } ]
      },
      "sqs" : {
        "queues" : [ {
          "name" : "myQueue",
          "fifoQueue" : true,
          "deduplicationScope" : "messageGroup",
          "fifoThroughputLimit" : "perMessageGroupId",
          "deliveryDelay" : 10,
          "visibilityTimeout" : 30,
          "receiveMessageWaitTime" : 0,
          "messageRetentionPeriod" : 345600,
          "redrivePolicy" : {
            "deadLetterQueue" : {
              "name" : "myQueue_error"
            },
            "maxReceiveCount" : 15
          },
          "policy" : {
            "statements" : [ {
              "effect" : "Deny",
              "principal" : "arn:aws:iam::123456789012:user/dec.kolakowski",
              "action" : [ "sqs:SendMessage", "sqs:ReceiveMessage" ]
            } ]
          }
        }, {
          "name" : "myQueue_error",
          "fifoQueue" : false,
          "deduplicationScope" : "queue",
          "fifoThroughputLimit" : "perQueue",
          "deliveryDelay" : 10,
          "visibilityTimeout" : 30,
          "receiveMessageWaitTime" : 0,
          "messageRetentionPeriod" : 345600
        } ],
        "bindingVersion" : "0.2.0"
      },
      "stomp" : {
        "bindingVersion" : "0.1.0"
      },
      "ws" : {
        "bindingVersion" : "0.1.0"
      }
    }
  } ],
  "message" : {
    "$ref" : "#/components/schemas/sendMessage"
  },
  "x-number" : 0,
  "x-string" : "",
  "x-object" : {
    "property" : { }
  }
}
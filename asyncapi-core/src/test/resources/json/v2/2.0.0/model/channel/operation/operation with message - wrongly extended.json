{
  "operationId": "sendMessage",
  "summary": "Send message",
  "description": "Send message to remote server",
  "tags": [
    {
      "name": "messages",
      "description": "operations with messages",
      "externalDocs": {
        "description": "Messages validation rules",
        "url": "messages/validation-rules"
      }
    }
  ],
  "externalDocs": {
    "description": "Messages sending rules",
    "url": "messages/sending-rules"
  },
  "bindings" : {
    "amqp" : {
      "expiration" : 100000,
      "userId" : "guest",
      "cc" : [ "user.logs" ],
      "priority" : 10,
      "deliveryMode" : 2,
      "mandatory" : false,
      "bcc" : [ "external.audit" ],
      "replyTo" : "user.signedup",
      "timestamp" : true,
      "ack" : false,
      "bindingVersion" : "0.2.0"
    },
    "amqp1" : { },
    "anypointmq" : { },
    "googlepubsub" : { },
    "http" : {
      "method" : "GET",
      "query" : {
        "type" : "object",
        "required" : [ "companyId" ],
        "properties" : {
          "companyId" : {
            "type" : "number",
            "minimum" : 1,
            "description" : "The Id of the company."
          }
        },
        "additionalProperties" : false
      },
      "bindingVersion" : "0.3.0"
    },
    "ibmmq" : { },
    "jms" : { },
    "kafka" : {
      "groupId" : {
        "type" : "string",
        "enum" : [ "myGroupId" ]
      },
      "clientId" : {
        "type" : "string",
        "enum" : [ "myClientId" ]
      },
      "bindingVersion" : "0.4.0"
    },
    "mercure" : { },
    "mqtt" : {
      "qos" : 2,
      "retain" : true,
      "bindingVersion" : "0.1.0"
    },
    "mqtt5" : { },
    "nats" : {
      "queue" : "messages",
      "bindingVersion" : "0.1.0"
    },
    "pulsar" : { },
    "redis" : { },
    "sns" : {
      "bindingVersion": "0.1.0",
      "topic": {
        "name": "someTopic"
      },
      "consumers": [
        {
          "protocol": "sqs",
          "endpoint": {
            "name": "someQueue"
          },
          "filterPolicy": {
            "store": [
              "asyncapi_corp"
            ],
            "event": [
              {
                "anything-but": "order_cancelled"
              }
            ],
            "customer_interests": [
              "rugby",
              "football",
              "baseball"
            ]
          },
          "filterPolicyScope": "MessageAttributes",
          "rawMessageDelivery": false,
          "redrivePolicy": {
            "deadLetterQueue": {
              "arn": "arn:aws:SQS:eu-west-1:0000000:123456789"
            },
            "maxReceiveCount": 25
          },
          "deliveryPolicy": {
            "minDelayTarget": 10,
            "maxDelayTarget": 100,
            "numRetries": 5,
            "numNoDelayRetries": 2,
            "numMinDelayRetries": 3,
            "numMaxDelayRetries": 5,
            "backoffFunction": "linear",
            "maxReceivesPerSecond": 2
          }
        }
      ]
    },
    "solace" : {
      "dmqEligible" : false,
      "bindingVersion" : "0.4.0",
      "destinations" : [ {
        "destinationType" : "queue",
        "deliveryMode" : "persistent",
        "queue" : {
          "name" : "sampleQueue",
          "topicSubscriptions" : [ "samples/*" ],
          "accessType" : "nonexclusive"
        }
      }, {
        "destinationType" : "topic",
        "deliveryMode" : "persistent",
        "topicSubscriptions" : [ "samples/*" ]
      } ]
    },
    "sqs" : { },
    "stomp" : { },
    "ws" : { }
  },
  "traits": [
    {
      "$ref": "#/components/operationTraits/sendMessage"
    },
    {
      "operationId": "sendMessage",
      "summary": "Send message",
      "description": "Send message to remote server",
      "tags": [
        {
          "name": "messages",
          "description": "operations with messages",
          "externalDocs": {
            "description": "Messages validation rules",
            "url": "messages/validation-rules"
          }
        }
      ],
      "externalDocs": {
        "description": "Messages sending rules",
        "url": "messages/sending-rules"
      },
      "bindings": {
        "amqp": {
          "expiration": 100000,
          "userId": "guest",
          "cc": [
            "user.logs"
          ],
          "priority": 10,
          "deliveryMode": 2,
          "mandatory": false,
          "bcc": [
            "external.audit"
          ],
          "replyTo": "user.signedup",
          "timestamp": true,
          "ack": false,
          "bindingVersion": "0.2.0"
        },
        "amqp1": {},
        "anypointmq": {},
        "googlepubsub": {},
        "http": {
          "method": "GET",
          "query": {
            "type": "object",
            "required": [
              "companyId"
            ],
            "properties": {
              "companyId": {
                "type": "number",
                "minimum": 1,
                "description": "The Id of the company."
              }
            },
            "additionalProperties": false
          },
          "bindingVersion": "0.3.0"
        },
        "ibmmq": {},
        "jms": {},
        "kafka": {
          "groupId": {
            "type": "string",
            "enum": [
              "myGroupId"
            ]
          },
          "clientId": {
            "type": "string",
            "enum": [
              "myClientId"
            ]
          },
          "bindingVersion": "0.5.0"
        },
        "mercure": {},
        "mqtt": {
          "qos": 2,
          "retain": true,
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {},
        "nats": {
          "queue": "messages",
          "bindingVersion": "0.1.0"
        },
        "pulsar": {},
        "redis": {},
        "sns": {
          "consumers" : []
        },
        "solace": {
          "dmqEligible" : false,
          "bindingVersion" : "0.4.0",
          "destinations" : [ {
            "destinationType" : "queue",
            "deliveryMode" : "persistent",
            "queue" : {
              "name" : "sampleQueue",
              "topicSubscriptions" : [ "samples/*" ],
              "accessType" : "nonexclusive"
            }
          }, {
            "destinationType" : "topic",
            "deliveryMode" : "persistent",
            "topicSubscriptions" : [ "samples/*" ]
          } ]
        },
        "sqs": {},
        "stomp": {},
        "ws": {}
      }
    }
  ],
  "message": {
    "headers": {
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Correlation ID set by application",
          "type": "string"
        },
        "applicationInstanceId": {
          "description": "Unique identifier for a given instance of the publishing application",
          "type": "string"
        }
      }
    },
    "payload": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/components/schemas/userCreate"
        },
        "signup": {
          "$ref": "#/components/schemas/signup"
        }
      }
    },
    "correlationId": {
      "description": "Default Correlation ID",
      "location": "$message.header#/correlationId"
    },
    "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
    "contentType": "application/json",
    "name": "UserSignup",
    "title": "User signup",
    "summary": "Action to sign a user up.",
    "description": "A longer description",
    "tags": [
      { "name": "user" },
      { "name": "signup" },
      { "name": "register" }
    ],
    "externalDocs": {
      "description": "User sign up rules",
      "url": "messages/sign-up-rules"
    },
    "bindings": {
      "amqp": {
        "contentEncoding": "gzip",
        "messageType": "user.signup",
        "bindingVersion": "0.2.0"
      },
      "amqp1": { },
      "anypointmq": {
        "headers": {
          "type": "object",
          "properties": {
            "correlationId": {
              "description": "Correlation ID set by application",
              "type": "string"
            }
          }
        },
        "bindingVersion": "0.0.1"
      },
      "googlepubsub": {
        "schema": {
          "name": "projects/your-project/schemas/message-avro",
          "type": "avro"
        },
        "bindingVersion": "0.1.0"
      },
      "http": {
        "headers": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "enum": [
                "application/json"
              ]
            }
          }
        },
        "statusCode" : 200,
        "bindingVersion": "0.3.0"
      },
      "ibmmq": {
        "type": "jms",
        "description": "JMS stream message",
        "headers": "Content-Type: application/json",
        "expiry": 0,
        "bindingVersion": "0.1.0"
      },
      "jms": { },
      "kafka": {
        "key": {
          "type": "string",
          "enum": [
            "myKey"
          ]
        },
        "schemaIdLocation": "payload",
        "schemaIdPayloadEncoding": "apicurio-new",
        "schemaLookupStrategy": "TopicIdStrategy",
        "bindingVersion": "0.5.0"
      },
      "mercure": { },
      "mqtt": {
        "bindingVersion": "0.1.0"
      },
      "mqtt5": { },
      "nats": { },
      "pulsar": { },
      "redis": { },
      "sns": { },
      "solace": { },
      "sqs": { },
      "stomp": { },
      "ws": { }
    },
    "examples": [
      {
        "headers": {
          "correlationId": "my-correlation-id",
          "applicationInstanceId": "myInstanceId"
        },
        "payload": {
          "user": {
            "someUserKey": "someUserValue"
          },
          "signup": {
            "someSignupKey": "someSignupValue"
          }
        }
      }
    ],
    "traits": [
      { "$ref": "#/components/messageTraits/commonHeaders" }
    ]
  },
  "x-number": 0,
  "x-string": "",
  "x-object": {
    "property": {}
  },
  "ext-number": 1
}
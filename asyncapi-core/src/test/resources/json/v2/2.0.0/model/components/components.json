{
  "schemas": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "$ref": "#/components/schemas/user"
    }
  },
  "messages": {
    "userSignup": {
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          },
          "applicationInstanceId": {
            "description": "Unique identifier for a given instance of the publishing application",
            "type": "string"
          }
        }
      },
      "payload": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/userCreate"
          },
          "signup": {
            "$ref": "#/components/schemas/signup"
          }
        }
      },
      "correlationId": {
        "description": "Default Correlation ID",
        "location": "$message.header#/correlationId"
      },
      "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
      "contentType": "application/json",
      "name": "UserSignup",
      "title": "User signup",
      "summary": "Action to sign a user up.",
      "description": "A longer description",
      "tags": [
        { "name": "user" },
        { "name": "signup" },
        { "name": "register" }
      ],
      "externalDocs": {
        "description": "User sign up rules",
        "url": "messages/sign-up-rules"
      },
      "bindings": {
        "amqp": {
          "contentEncoding": "gzip",
          "messageType": "user.signup",
          "bindingVersion": "0.2.0"
        },
        "amqp1": {},
        "anypointmq": {
          "headers": {
            "type": "object",
            "properties": {
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              }
            }
          },
          "bindingVersion": "0.0.1"
        },
        "googlepubsub": {
          "schema": {
            "name": "projects/your-project/schemas/message-avro",
            "type": "avro"
          },
          "bindingVersion": "0.1.0"
        },
        "http": {
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [
                  "application/json"
                ]
              }
            }
          },
          "statusCode" : 200,
          "bindingVersion": "0.3.0"
        },
        "ibmmq": {
          "type": "jms",
          "description": "JMS stream message",
          "headers": "Content-Type: application/json",
          "expiry": 0,
          "bindingVersion": "0.1.0"
        },
        "jms": {},
        "kafka": {
          "key": {
            "type": "string",
            "enum": [
              "myKey"
            ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy",
          "bindingVersion": "0.5.0"
        },
        "mercure": {},
        "mqtt": {
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {},
        "nats": {},
        "pulsar": {},
        "redis": {},
        "sns": {},
        "solace": {},
        "sqs": {},
        "stomp": {},
        "ws": {}
      },
      "examples": [
        {
          "headers": {
            "correlationId": "my-correlation-id",
            "applicationInstanceId": "myInstanceId"
          },
          "payload": {
            "user": {
              "someUserKey": "someUserValue"
            },
            "signup": {
              "someSignupKey": "someSignupValue"
            }
          }
        }
      ],
      "traits": [
        { "$ref": "#/components/messageTraits/commonHeaders" }
      ]
    },
    "userSignout": {
      "$ref": "#/components/messages/userSignout"
    }
  },
  "securitySchemes": {
    "apiKey": {
      "type": "apiKey",
      "description": "apiKey",
      "in": "user"
    },
    "asymmetricEncryption": {
      "$ref": "#/components/securitySchemes/asymmetricEncryption"
    },
    "gssapi": {
      "$ref": "#/components/securitySchemes/gssapi"
    },
    "oauth2": {
      "type": "oauth2",
      "description": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://example.com/api/oauth/dialog",
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "clientCredentials": {
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "implicit": {
          "authorizationUrl": "https://example.com/api/oauth/dialog",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        },
        "password": {
          "tokenUrl": "https://example.com/api/oauth/token",
          "refreshUrl": "https://example.com/api/oauth/refresh",
          "scopes": {
            "write:pets": "modify pets in your account",
            "read:pets": "read your pets"
          }
        }
      }
    },
    "openIdConnect": {
      "type": "openIdConnect",
      "description": "openIdConnect",
      "openIdConnectUrl": "https://server.com/.well-known/openid-configuration"
    },
    "httpApiKey": {
      "type": "httpApiKey",
      "description": "httpApiKey",
      "name": "api_key",
      "in": "header"
    },
    "httpBasic": {
      "type": "http",
      "description": "http",
      "scheme": "basic"
    },
    "httpBearer": {
      "type": "http",
      "description": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    },
    "plain": {
      "$ref": "#/components/securitySchemes/plain"
    },
    "scramSha256": {
      "$ref": "#/components/securitySchemes/scramSha256"
    },
    "scramSha512": {
      "$ref": "#/components/securitySchemes/scramSha512"
    },
    "symmetricEncryption": {
      "$ref": "#/components/securitySchemes/symmetricEncryption"
    },
    "userPassword": {
      "$ref": "#/components/securitySchemes/userPassword"
    },
    "X509": {
      "$ref": "#/components/securitySchemes/X509"
    }
  },
  "parameters": {
    "parameter": {
      "description": "Id of the user.",
      "schema": {
        "type": "string"
      },
      "location": "$message.payload#/user/id"
    },
    "parameterRef": {
      "$ref": "#/components/parameters/parameter"
    }
  },
  "correlationIds": {
    "userSignupCorrelationId": {
      "description": "Default Correlation ID",
      "location": "$message.header#/correlationId"
    }
  },
  "operationTraits": {
    "sendMessage": {
      "operationId": "sendMessage",
      "summary": "Send message",
      "description": "Send message to remote server",
      "tags": [
        {
          "name": "messages",
          "description": "operations with messages",
          "externalDocs": {
            "description": "Messages validation rules",
            "url": "messages/validation-rules"
          }
        }
      ],
      "externalDocs": {
        "description": "Messages sending rules",
        "url": "messages/sending-rules"
      },
      "bindings": {
        "amqp": {
          "expiration": 100000,
          "userId": "guest",
          "cc": [
            "user.logs"
          ],
          "priority": 10,
          "deliveryMode": 2,
          "mandatory": false,
          "bcc": [
            "external.audit"
          ],
          "replyTo": "user.signedup",
          "timestamp": true,
          "ack": false,
          "bindingVersion": "0.2.0"
        },
        "amqp1": {},
        "anypointmq": {},
        "googlepubsub": {},
        "http": {
          "method": "GET",
          "query": {
            "type": "object",
            "required": [
              "companyId"
            ],
            "properties": {
              "companyId": {
                "type": "number",
                "minimum": 1,
                "description": "The Id of the company."
              }
            },
            "additionalProperties": false
          },
          "bindingVersion": "0.3.0"
        },
        "ibmmq": {},
        "jms": {},
        "kafka": {
          "groupId": {
            "type": "string",
            "enum": [
              "myGroupId"
            ]
          },
          "clientId": {
            "type": "string",
            "enum": [
              "myClientId"
            ]
          },
          "bindingVersion": "0.5.0"
        },
        "mercure": {},
        "mqtt": {
          "qos": 2,
          "retain": true,
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {},
        "nats": {
          "queue": "messages",
          "bindingVersion": "0.1.0"
        },
        "pulsar": {},
        "redis": {},
        "sns": {},
        "solace": {
          "destinations": [
            {
              "destinationType": "queue",
              "queue": {
                "name": "sampleQueue",
                "topicSubscriptions": [
                  "samples/*"
                ],
                "accessType": "nonexclusive"
              }
            },
            {
              "destinationType": "topic",
              "topicSubscriptions": [
                "samples/*"
              ]
            }
          ],
          "bindingVersion": "0.4.0"
        },
        "sqs": {
          "queues": [
            {
              "name": "myQueue",
              "fifoQueue": true,
              "deduplicationScope": "messageGroup",
              "fifoThroughputLimit": "perMessageGroupId",
              "deliveryDelay": 10,
              "redrivePolicy": {
                "deadLetterQueue": {
                  "name": "myQueue_error"
                },
                "maxReceiveCount": 15
              },
              "policy": {
                "statements": [
                  {
                    "effect": "Deny",
                    "principal": "arn:aws:iam::123456789012:user/dec.kolakowski",
                    "action": [
                      "sqs:SendMessage",
                      "sqs:ReceiveMessage"
                    ]
                  }
                ]
              }
            },
            {
              "name": "myQueue_error",
              "deliveryDelay": 10
            }
          ],
          "bindingVersion": "0.2.0"
        },
        "stomp": {},
        "ws": {}
      }
    }
  },
  "messageTraits": {
    "userSignup": {
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          },
          "applicationInstanceId": {
            "description": "Unique identifier for a given instance of the publishing application",
            "type": "string"
          }
        }
      },
      "correlationId": {
        "description": "Default Correlation ID",
        "location": "$message.header#/correlationId"
      },
      "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
      "contentType": "application/json",
      "name": "UserSignup",
      "title": "User signup",
      "summary": "Action to sign a user up.",
      "description": "A longer description",
      "tags": [
        { "name": "user" },
        { "name": "signup" },
        { "name": "register" }
      ],
      "externalDocs": {
        "description": "User sign up rules",
        "url": "messages/sign-up-rules"
      },
      "bindings": {
        "amqp": {
          "contentEncoding": "gzip",
          "messageType": "user.signup",
          "bindingVersion": "0.2.0"
        },
        "amqp1": {},
        "anypointmq": {
          "headers": {
            "type": "object",
            "properties": {
              "correlationId": {
                "description": "Correlation ID set by application",
                "type": "string"
              }
            }
          },
          "bindingVersion": "0.0.1"
        },
        "googlepubsub": {
          "schema": {
            "name": "projects/your-project/schemas/message-avro",
            "type": "avro"
          },
          "bindingVersion": "0.1.0"
        },
        "http": {
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string",
                "enum": [
                  "application/json"
                ]
              }
            }
          },
          "statusCode" : 200,
          "bindingVersion": "0.3.0"
        },
        "ibmmq": {
          "type": "jms",
          "description": "JMS stream message",
          "headers": "Content-Type: application/json",
          "expiry": 0,
          "bindingVersion": "0.1.0"
        },
        "jms": {},
        "kafka": {
          "key": {
            "type": "string",
            "enum": [
              "myKey"
            ]
          },
          "schemaIdLocation": "payload",
          "schemaIdPayloadEncoding": "apicurio-new",
          "schemaLookupStrategy": "TopicIdStrategy",
          "bindingVersion": "0.5.0"
        },
        "mercure": {},
        "mqtt": {
          "bindingVersion": "0.1.0"
        },
        "mqtt5": {},
        "nats": {},
        "pulsar": {},
        "redis": {},
        "sns": {},
        "solace": {},
        "sqs": {},
        "stomp": {},
        "ws": {}
      },
      "examples": [
        {
          "headers": {
            "correlationId": "my-correlation-id",
            "applicationInstanceId": "myInstanceId"
          },
          "payload": {
            "user": {
              "someUserKey": "someUserValue"
            },
            "signup": {
              "someSignupKey": "someSignupValue"
            }
          }
        }
      ]
    }
  },
  "serverBindings": {
    "amqp1": {},
    "anypointmq": {},
    "googlepubsub": {},
    "http": {},
    "ibmmq": {
      "groupId": "PRODCLSTR1",
      "ccdtQueueManagerName": "*",
      "multiEndpointServer": false,
      "heartBeatInterval": 300,
      "cipherSpec": "ANY_TLS12_OR_HIGHER",
      "bindingVersion": "0.1.0"
    },
    "jms": {},
    "kafka": {
      "schemaRegistryUrl": "https://my-schema-registry.com",
      "schemaRegistryVendor": "confluent",
      "bindingVersion": "0.5.0"
    },
    "mercure": {},
    "mqtt": {
      "clientId": "guest",
      "cleanSession": true,
      "lastWill": {
        "topic": "/last-wills",
        "qos": 2,
        "message": "Guest gone offline.",
        "retain": false
      },
      "keepAlive": 60,
      "bindingVersion": "0.1.0"
    },
    "mqtt5": {
      "sessionExpiryInterval": 60,
      "bindingVersion": "0.2.0"
    },
    "nats": {},
    "pulsar": {
      "tenant": "contoso",
      "bindingVersion": "0.1.0"
    },
    "redis": {},
    "sns": {},
    "solace": {
      "clientName": "transactions-broker",
      "msgVpn": "ProdVPN",
      "bindingVersion": "0.4.0"
    },
    "sqs": {},
    "stomp": {},
    "ws": {}
  },
  "channelBindings": {
    "amqp": {
      "is": "routingKey",
      "queue": {
        "name": "my-queue-name",
        "durable": true,
        "exclusive": true,
        "autoDelete": false,
        "vhost": "/"
      },
      "exchange": {
        "name": "myExchange",
        "type": "topic",
        "durable": true,
        "autoDelete": false,
        "vhost": "/"
      },
      "bindingVersion": "0.2.0"
    },
    "amqp1": { },
    "anypointmq": {
      "destination": "user-signup-exchg",
      "destinationType": "exchange",
      "bindingVersion": "0.0.1"
    },
    "googlepubsub": {
      "topic": "projects/your-project/topics/topic-proto-schema",
      "messageRetentionDuration": "86400s",
      "messageStoragePolicy": {
        "allowedPersistenceRegions": [
          "us-central1",
          "us-central2",
          "us-east1",
          "us-east4",
          "us-east5",
          "us-east7",
          "us-south1",
          "us-west1",
          "us-west2",
          "us-west3",
          "us-west4"
        ]
      },
      "schemaSettings": {
        "encoding": "binary",
        "name": "projects/your-project/schemas/message-proto"
      },
      "bindingVersion": "0.1.0"
    },
    "http": { },
    "ibmmq": {
      "destinationType": "topic",
      "queue": {
        "objectName": "message",
        "isPartitioned": false,
        "exclusive": true
      },
      "topic": {
        "string": "messages",
        "objectName": "message",
        "durablePermitted": true,
        "lastMsgRetained": true
      },
      "maxMsgLength": 1024,
      "bindingVersion": "0.1.0"
    },
    "jms": { },
    "kafka": {
      "topic": "my-specific-topic-name",
      "partitions": 20,
      "replicas": 3,
      "topicConfiguration": {
        "cleanup.policy": [
          "delete",
          "compact"
        ],
        "retention.ms": 604800000,
        "retention.bytes": 1000000000,
        "delete.retention.ms": 86400000,
        "max.message.bytes": 1048588
      },
      "bindingVersion": "0.5.0"
    },
    "mercure": { },
    "mqtt": { },
    "mqtt5": { },
    "nats": { },
    "pulsar": {
      "namespace": "staging",
      "persistence": "persistent",
      "compaction": 1000,
      "geo-replication": [
        "us-east1",
        "us-west1"
      ],
      "retention": {
        "time": 7,
        "size": 1000
      },
      "ttl": 360,
      "deduplication": false,
      "bindingVersion": "0.1.0"
    },
    "redis": { },
    "sns": {
      "name" : "my-sns-topic",
      "policy" : {
        "statements" : [ {
          "effect" : "Allow",
          "principal" : "*",
          "action" : "SNS:Publish"
        } ]
      },
      "bindingVersion" : "0.1.0"
    },
    "solace": { },
    "sqs": {
      "queue" : {
        "name" : "myQueue",
        "fifoQueue" : true,
        "deduplicationScope" : "messageGroup",
        "fifoThroughputLimit" : "perMessageGroupId",
        "deliveryDelay" : 15,
        "visibilityTimeout" : 60,
        "receiveMessageWaitTime" : 0,
        "messageRetentionPeriod" : 86400,
        "redrivePolicy" : {
          "deadLetterQueue" : {
            "arn" : "arn:aws:SQS:eu-west-1:0000000:123456789"
          },
          "maxReceiveCount" : 15
        },
        "policy" : {
          "statements" : [ {
            "effect" : "Deny",
            "principal" : "arn:aws:iam::123456789012:user/dec.kolakowski",
            "action" : [ "sqs:SendMessage", "sqs:ReceiveMessage" ]
          } ]
        },
        "tags" : {
          "owner" : "AsyncAPI.NET",
          "platform" : "AsyncAPIOrg"
        }
      },
      "deadLetterQueue" : {
        "name" : "myQueue_error",
        "fifoQueue" : false,
        "deduplicationScope" : "queue",
        "fifoThroughputLimit" : "perQueue",
        "deliveryDelay" : 0,
        "visibilityTimeout" : 0,
        "receiveMessageWaitTime" : 0,
        "messageRetentionPeriod" : 604800
      }
    },
    "stomp": { },
    "ws": {
      "method": "GET",
      "query": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "description": "Referral."
          }
        }
      },
      "headers": {
        "type": "object",
        "properties": {
          "Authentication": {
            "type": "string",
            "description": "Authentication token"
          }
        }
      }
    }
  },
  "operationBindings": {
    "amqp" : {
      "expiration" : 100000,
      "userId" : "guest",
      "cc" : [ "user.logs" ],
      "priority" : 10,
      "deliveryMode" : 2,
      "mandatory" : false,
      "bcc" : [ "external.audit" ],
      "replyTo" : "user.signedup",
      "timestamp" : true,
      "ack" : false,
      "bindingVersion" : "0.2.0"
    },
    "amqp1" : { },
    "anypointmq" : { },
    "googlepubsub" : { },
    "http" : {
      "method" : "GET",
      "query" : {
        "type" : "object",
        "required" : [ "companyId" ],
        "properties" : {
          "companyId" : {
            "type" : "number",
            "minimum" : 1,
            "description" : "The Id of the company."
          }
        },
        "additionalProperties" : false
      },
      "bindingVersion" : "0.3.0"
    },
    "ibmmq" : { },
    "jms" : { },
    "kafka" : {
      "groupId" : {
        "type" : "string",
        "enum" : [ "myGroupId" ]
      },
      "clientId" : {
        "type" : "string",
        "enum" : [ "myClientId" ]
      },
      "bindingVersion" : "0.5.0"
    },
    "mercure" : { },
    "mqtt" : {
      "qos" : 2,
      "retain" : true,
      "bindingVersion" : "0.1.0"
    },
    "mqtt5" : { },
    "nats" : {
      "queue" : "messages",
      "bindingVersion" : "0.1.0"
    },
    "pulsar" : { },
    "redis" : { },
    "sns" : {
      "topic" : {
        "name" : "someTopic"
      },
      "consumers" : [ {
        "protocol" : "sqs",
        "endpoint" : {
          "name" : "someQueue"
        },
        "filterPolicy" : {
          "store" : [ "asyncapi_corp" ],
          "event" : [ {
            "anything-but" : "order_cancelled"
          } ],
          "customer_interests" : [ "rugby", "football", "baseball" ]
        },
        "filterPolicyScope" : "MessageAttributes",
        "rawMessageDelivery" : false,
        "redrivePolicy" : {
          "deadLetterQueue" : {
            "arn" : "arn:aws:SQS:eu-west-1:0000000:123456789"
          },
          "maxReceiveCount" : 25
        },
        "deliveryPolicy" : {
          "minDelayTarget" : 10,
          "maxDelayTarget" : 100,
          "numRetries" : 5,
          "numNoDelayRetries" : 2,
          "numMinDelayRetries" : 3,
          "numMaxDelayRetries" : 5,
          "backoffFunction" : "linear",
          "maxReceivesPerSecond" : 2
        }
      } ],
      "bindingVersion" : "0.1.0"
    },
    "solace" : {
      "destinations": [
        {
          "destinationType": "queue",
          "queue": {
            "name": "sampleQueue",
            "topicSubscriptions": [
              "samples/*"
            ],
            "accessType": "nonexclusive"
          }
        },
        {
          "destinationType": "topic",
          "topicSubscriptions": [
            "samples/*"
          ]
        }
      ],
      "bindingVersion": "0.4.0"
    },
    "sqs" : {
      "queues": [
        {
          "name": "myQueue",
          "fifoQueue": true,
          "deduplicationScope": "messageGroup",
          "fifoThroughputLimit": "perMessageGroupId",
          "deliveryDelay": 10,
          "redrivePolicy": {
            "deadLetterQueue": {
              "name": "myQueue_error"
            },
            "maxReceiveCount": 15
          },
          "policy": {
            "statements": [
              {
                "effect": "Deny",
                "principal": "arn:aws:iam::123456789012:user/dec.kolakowski",
                "action": [
                  "sqs:SendMessage",
                  "sqs:ReceiveMessage"
                ]
              }
            ]
          }
        },
        {
          "name": "myQueue_error",
          "deliveryDelay": 10
        }
      ],
      "bindingVersion": "0.2.0"
    },
    "stomp" : { },
    "ws" : { }
  },
  "messageBindings": {
    "amqp": {
      "contentEncoding": "gzip",
      "messageType": "user.signup",
      "bindingVersion": "0.2.0"
    },
    "amqp1": {},
    "anypointmq": {
      "headers": {
        "type": "object",
        "properties": {
          "correlationId": {
            "description": "Correlation ID set by application",
            "type": "string"
          }
        }
      },
      "bindingVersion": "0.0.1"
    },
    "googlepubsub": {
      "schema": {
        "name": "projects/your-project/schemas/message-avro",
        "type": "avro"
      },
      "bindingVersion": "0.1.0"
    },
    "http": {
      "headers": {
        "type": "object",
        "properties": {
          "Content-Type": {
            "type": "string",
            "enum": [
              "application/json"
            ]
          }
        }
      },
      "statusCode" : 200,
      "bindingVersion": "0.3.0"
    },
    "ibmmq": {
      "type": "jms",
      "description": "JMS stream message",
      "headers": "Content-Type: application/json",
      "expiry": 0,
      "bindingVersion": "0.1.0"
    },
    "jms": {},
    "kafka": {
      "key": {
        "type": "string",
        "enum": [
          "myKey"
        ]
      },
      "schemaIdLocation": "payload",
      "schemaIdPayloadEncoding": "apicurio-new",
      "schemaLookupStrategy": "TopicIdStrategy",
      "bindingVersion": "0.5.0"
    },
    "mercure": {},
    "mqtt": {
      "bindingVersion": "0.1.0"
    },
    "mqtt5": {},
    "nats": {},
    "pulsar": {},
    "redis": {},
    "sns": {},
    "solace": {},
    "sqs": {},
    "stomp": {},
    "ws": {}
  }
}
